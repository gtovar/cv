en:
  date:
    abbr_day_names:
    - Sun
    - Mon
    - Tue
    - Wed
    - Thu
    - Fri
    - Sat
    abbr_month_names:
    -
    - Jan
    - Feb
    - Mar
    - Apr
    - May
    - Jun
    - Jul
    - Aug
    - Sep
    - Oct
    - Nov
    - Dec
    day_names:
    - Sunday
    - Monday
    - Tuesday
    - Wednesday
    - Thursday
    - Friday
    - Saturday
    formats:
      default: ! '%Y-%m-%d'
      long: ! '%B %d, %Y'
      short: ! '%b %d'
    month_names:
    -
    - January
    - February
    - March
    - April
    - May
    - June
    - July
    - August
    - September
    - October
    - November
    - December
    order:
    - :year
    - :month
    - :day
  datetime:
    distance_in_words:
      about_x_hours:
        one: about 1 hour
        other: about %{count} hours
      about_x_months:
        one: about 1 month
        other: about %{count} months
      about_x_years:
        one: about 1 year
        other: about %{count} years
      almost_x_years:
        one: almost 1 year
        other: almost %{count} years
      half_a_minute: half a minute
      less_than_x_minutes:
        one: less than a minute
        other: less than %{count} minutes
      less_than_x_seconds:
        one: less than 1 second
        other: less than %{count} seconds
      over_x_years:
        one: over 1 year
        other: over %{count} years
      x_days:
        one: 1 day
        other: ! '%{count} days'
      x_minutes:
        one: 1 minute
        other: ! '%{count} minutes'
      x_months:
        one: 1 month
        other: ! '%{count} months'
      x_seconds:
        one: 1 second
        other: ! '%{count} seconds'
    prompts:
      day: Day
      hour: Hour
      minute: Minute
      month: Month
      second: Seconds
      year: Year
  errors:
    format: ! '%{attribute} %{message}'
    messages:
      accepted: must be accepted
      blank: can't be blank
      present: must be blank
      confirmation: ! "doesn't match %{attribute}"
      empty: can't be empty
      equal_to: must be equal to %{count}
      even: must be even
      exclusion: is reserved
      greater_than: must be greater than %{count}
      greater_than_or_equal_to: must be greater than or equal to %{count}
      inclusion: is not included in the list
      invalid: is invalid
      less_than: must be less than %{count}
      less_than_or_equal_to: must be less than or equal to %{count}
      not_a_number: is not a number
      not_an_integer: must be an integer
      odd: must be odd
      record_invalid: ! 'Validation failed: %{errors}'
      restrict_dependent_destroy:
        one: "Cannot delete record because a dependent %{record} exists"
        many: "Cannot delete record because dependent %{record} exist"
      taken: has already been taken
      too_long:
        one: is too long (maximum is 1 character)
        other: is too long (maximum is %{count} characters)
      too_short:
        one: is too short (minimum is 1 character)
        other: is too short (minimum is %{count} characters)
      wrong_length:
        one: is the wrong length (should be 1 character)
        other: is the wrong length (should be %{count} characters)
      other_than: "must be other than %{count}"
    template:
      body: ! 'There were problems with the following fields:'
      header:
        one: 1 error prohibited this %{model} from being saved
        other: ! '%{count} errors prohibited this %{model} from being saved'
  helpers:
    select:
      prompt: Please select
    submit:
      create: Create %{model}
      submit: Save %{model}
      update: Update %{model}
  number:
    currency:
      format:
        delimiter: ! ','
        format: ! '%u%n'
        precision: 2
        separator: .
        significant: false
        strip_insignificant_zeros: false
        unit: $
    format:
      delimiter: ! ','
      precision: 3
      separator: .
      significant: false
      strip_insignificant_zeros: false
    human:
      decimal_units:
        format: ! '%n %u'
        units:
          billion: Billion
          million: Million
          quadrillion: Quadrillion
          thousand: Thousand
          trillion: Trillion
          unit: ''
      format:
        delimiter: ''
        precision: 3
        significant: true
        strip_insignificant_zeros: true
      storage_units:
        format: ! '%n %u'
        units:
          byte:
            one: Byte
            other: Bytes
          gb: GB
          kb: KB
          mb: MB
          tb: TB
    percentage:
      format:
        delimiter: ''
        format: "%n%"
    precision:
      format:
        delimiter: ''
  support:
    array:
      last_word_connector: ! ', and '
      two_words_connector: ! ' and '
      words_connector: ! ', '
  time:
    am: am
    formats:
      default: ! '%a, %d %b %Y %H:%M:%S %z'
      long: ! '%B %d, %Y %H:%M'
      short: ! '%d %b %H:%M'
    pm: pm
  email_spam: Do not worry, I not send spam
  email_description: Drop me a Line, always check my Inbox.
  about: About
  me: Me
  profession_lti: L.T.I.
  home: Home
  about_bar: About
  works: Works
  skills: Skills
  resume: Resume
  clients: Tools
  process: Process
  contact: Contact
  about_me_1: Past Actions Predict Future
  about_me_2: Hi, I'm Back-End Developer in Ruby on Rails and .Net, live in Monterrey, Nuevo León. A graduate of the Universidad Autónoma Nuevo León with a degree in Information Technology in January 2013.
  about_me_3: I decided involved into the world of RoR by a desire to learn something new and to my surprise was found to be completely unknown, changed almost everything, gave me new challenges, a new wave of knowledge and an interesting learning curve, changed from the Windows operating system to Ubuntu, learned many commands and focus on the console, how install applications, updates, create a new development environment versus Windows, also changed my Visual Studio editor to Vim and Tmuxinator, Internet Explorer to Chrome, ASP.net to Ruby on Rails, new architectures, 3 layers pass to work in MVC, I discovered new ways to learn a new language with the help of pair programming, the way we interact with the database was no longer the same, although topics such as MVC and EntityFramework was dominated until met Ruby on Rails, learned to do more productive following metrics and methodologies like Agile Samurai, which help you answer questions like, what is price and development time of an application?, Where am currently in the project? and What I'm doing?, if am I progress?, etc.
  about_me_4: Hundreds of hours, thousands of lines of code written, headaches, gallons of coffee, you discover that 24 hours a day is not enough to discover all new challenges like cross browser, new activities such as testing. I got many new and unknown terms. new practices, understand a little more Web Design and make blueprints, mocksup, learn that there are tools like Balsamiq, Cacoo to create diagrams, kanbanflow to measure your time, etc.. Learn how you can manage a project with the help of PivotalTracker and you can also use Github. In short it a whole world. 
  about_me_5: I think the most important thing I can conclude that it is good to have a little idea about all, many of the features of an application have been developed and are available for use, it is a Ruby core. Customers or Companies, always looking for offer quality at a good price, and this is reflected in savings of time and money, we know today, that things must be made since yesterday. No need to reinvent the wheel, the community is very creative and innovative, always suggesting and make delivery new features a clear example of this is the system that manages Ruby Gems which is great. 
  about_me_6: Currently, I would like to find opportunity especially as Back-End Developer. Front-End has many interesting topics for me as SEO, Marketing, Gamification, UX / UI and Responsive Web Design, these topics created new positions within companies, even so I like to spend more time learning programming languages  and reading books on my Kindle, always looking for the best practices, new approachment, new arguments, refactoring, case studies, new strategies, etc. As a developer, the Front-End is a fundamental part of an application and requires always modern programming languages that allow the web site to be more attractive and interactive languages like NodeJS, Ember, Angular, Knockout, Backbones, SASS, CoffeScript, etc.
  about_me_7: .Net language was always my favorite to this day and I still like it. VB.net as C#, either desktop or web, I should be grateful to .NET discover this fascinating world, I have many academic projects, and some real. The door is always open for .Net projects. If you need to know more info about my tools and their uses you can find in the description of each project in my Portafilio.
  all_rights_reserved: All rights reserved.
  deploy: Deploy
  programmer_box: For software development, I have more experience in Ruby on Rails, I follow a Agile Methodology. My development environment is Ubuntu, Tmuxinator and my favorite editor is VIM. Supporting the application is part of being a programmer and understand the importance of continued support after the delivery of the final product. Right now I'm transfer this knowledge to .Net
  testing_box: How to test software offers quality and reduces the margin of error and many other benefits. Good to know that new code introduced not break anything, in many cases, test are not paid or required but I try to make at least some that I consider important, using Red, Green, Refactor, TDD, some Unity test, etc. Tools used Errbit and CircleCI.
  deployment_box: Deploy a E-commerce like Spree in Digital Ocean, Create Apis or consume Apis, Services as ssh certificate, Ngnix, Capistrano, Unicorn, RailsCast and other tutorials serve me to Deploying to production,this is a task that always want to perform to finally face a cycle of implementation. Servers, services,  and settings was a part from my route to learn. Always with the mindset that everyone has things to do and you have to teach yourself.
  web_design_box: Also as all programmers need to touch Fron-End with programming languages that allow it to be attractive, interactive and improve site performance, as caching strategies, languages like NodeJS, Ember, Angular, Knockout, Backbones and go - The Go Programming Language - Google Project Hosting, are languages I would like to implement because until today, in any project are implemented yet. I really like the topics of SEO, Marketing, Gamification, UX / UI, Web Responsive Design.
  proyect: Proyect
  tasks: Tasks
  outstaning: Outstaning  
  tools: Tools
  created_at: Created at
  live_demo: Live demo
  position: Position
  my: My
  proyects: Works
  free_lancer_description: I am available for 
  job_want: Developer
  hire_me: Hire me
  download_resume: Download Resume
  skills: Skills
  team_work: Team Work
  team_work_definition: Its so important work together.
  self_taught: Self Taught
  self_taught_definition: Be a selt-taught go head.
  methodic: Methodic
  methodic_definition: Follow a methodic agil
  helpful: Helpful
  helpful_definition: Be helpul guy.
  transition: Transition
  transition_definition: hava capcity to adapt to enviroment
  produce_results: Produce Results
  produce_results_definition: Alway do the do things

